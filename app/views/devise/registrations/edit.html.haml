%h2
  Edit #{resource_name.to_s.humanize}
= form_for(resource, as: resource_name, url: registration_path(resource_name), html: { method: :put }, data:{ turbo:false }) do |f|
  = render "devise/shared/error_messages", resource: resource
  .field
    = f.label :email
    %br/
    = f.email_field :email, autofocus: true, autocomplete: "email"
  - if devise_mapping.confirmable? && resource.pending_reconfirmation?
    %div
      #{I18n.t(:'user_profile_edit_page.waiting_email_confirmation_message', email: resource.unconfirmed_email)}
  .field
    = f.label :password
    %i #{I18n.t(:'user_profile_edit_page.leave_blank_password_message')}
    %br/
    = f.password_field :password, autocomplete: I18n.t(:password_autocomplete)
    - if @minimum_password_length
      %br/
      %em
        #{I18n.t(:'user_profile_edit_page.characters_minimum_message', amount: @minimum_password_length.to_s)}
  .field
    = f.label :password_confirmation
    %br/
    = f.password_field :password_confirmation, autocomplete: I18n.t(:password_autocomplete)
  .field
    = f.label :current_password
    %i #{I18n.t(:'user_profile_edit_page.need_current_password_message')}
    %br/
    = f.password_field :current_password, autocomplete: I18n.t(:current_password_autocomplete)
  .actions
    = f.submit I18n.t(:'user_profile_edit_page.update_btn_text')
%h3 #{I18n.t(:'user_profile_edit_page.cancel_account_label')}
%p
  #{I18n.t(:'user_profile_edit_page.unhappy_label')} #{button_to I18n.t(:'user_profile_edit_page.cancel_account_label'), registration_path(resource_name), data: { confirm: "Are you sure?" }, data:{ turbo:false }, method: :delete}
= link_to "Back", :back
